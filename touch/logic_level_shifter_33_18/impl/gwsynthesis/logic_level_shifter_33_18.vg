//
//Written by GowinSynthesis
//Tool Version "V1.9.11.02 (64-bit)"
//Mon Aug  4 21:46:48 2025

//Source file index table:
//file0 "\C:/Users/rui/Desktop/iphone7-lcd-reverse-engineering/touch/logic_level_shifter_33_18/src/top.v"
`timescale 100 ps/100 ps
module top (
  clk,
  I,
  O,
  led
)
;
input clk;
input [7:0] I;
output [7:0] O;
output led;
wire clk_d;
wire led_d;
wire n21_1;
wire n21_2;
wire n20_1;
wire n20_2;
wire n19_1;
wire n19_2;
wire n18_1;
wire n18_0_COUT;
wire n22_7;
wire [7:0] O_d;
wire [3:0] led_counter;
wire VCC;
wire GND;
  IBUF clk_ibuf (
    .O(clk_d),
    .I(clk) 
);
  IBUF I_0_ibuf (
    .O(O_d[0]),
    .I(I[0]) 
);
  IBUF I_1_ibuf (
    .O(O_d[1]),
    .I(I[1]) 
);
  IBUF I_2_ibuf (
    .O(O_d[2]),
    .I(I[2]) 
);
  IBUF I_3_ibuf (
    .O(O_d[3]),
    .I(I[3]) 
);
  IBUF I_4_ibuf (
    .O(O_d[4]),
    .I(I[4]) 
);
  IBUF I_5_ibuf (
    .O(O_d[5]),
    .I(I[5]) 
);
  IBUF I_6_ibuf (
    .O(O_d[6]),
    .I(I[6]) 
);
  IBUF I_7_ibuf (
    .O(O_d[7]),
    .I(I[7]) 
);
  OBUF O_0_obuf (
    .O(O[0]),
    .I(O_d[0]) 
);
  OBUF O_1_obuf (
    .O(O[1]),
    .I(O_d[1]) 
);
  OBUF O_2_obuf (
    .O(O[2]),
    .I(O_d[2]) 
);
  OBUF O_3_obuf (
    .O(O[3]),
    .I(O_d[3]) 
);
  OBUF O_4_obuf (
    .O(O[4]),
    .I(O_d[4]) 
);
  OBUF O_5_obuf (
    .O(O[5]),
    .I(O_d[5]) 
);
  OBUF O_6_obuf (
    .O(O[6]),
    .I(O_d[6]) 
);
  OBUF O_7_obuf (
    .O(O[7]),
    .I(O_d[7]) 
);
  OBUF led_obuf (
    .O(led),
    .I(led_d) 
);
  DFF led_counter_4_s0 (
    .Q(led_d),
    .D(n18_1),
    .CLK(clk_d) 
);
  DFF led_counter_3_s0 (
    .Q(led_counter[3]),
    .D(n19_1),
    .CLK(clk_d) 
);
  DFF led_counter_2_s0 (
    .Q(led_counter[2]),
    .D(n20_1),
    .CLK(clk_d) 
);
  DFF led_counter_1_s0 (
    .Q(led_counter[1]),
    .D(n21_1),
    .CLK(clk_d) 
);
  DFF led_counter_0_s0 (
    .Q(led_counter[0]),
    .D(n22_7),
    .CLK(clk_d) 
);
  ALU n21_s (
    .SUM(n21_1),
    .COUT(n21_2),
    .I0(led_counter[1]),
    .I1(led_counter[0]),
    .I3(GND),
    .CIN(GND) 
);
defparam n21_s.ALU_MODE=0;
  ALU n20_s (
    .SUM(n20_1),
    .COUT(n20_2),
    .I0(led_counter[2]),
    .I1(GND),
    .I3(GND),
    .CIN(n21_2) 
);
defparam n20_s.ALU_MODE=0;
  ALU n19_s (
    .SUM(n19_1),
    .COUT(n19_2),
    .I0(led_counter[3]),
    .I1(GND),
    .I3(GND),
    .CIN(n20_2) 
);
defparam n19_s.ALU_MODE=0;
  ALU n18_s (
    .SUM(n18_1),
    .COUT(n18_0_COUT),
    .I0(led_d),
    .I1(GND),
    .I3(GND),
    .CIN(n19_2) 
);
defparam n18_s.ALU_MODE=0;
  INV n22_s2 (
    .O(n22_7),
    .I(led_counter[0]) 
);
  VCC VCC_cZ (
    .V(VCC)
);
  GND GND_cZ (
    .G(GND)
);
  GSR GSR (
    .GSRI(VCC) 
);
endmodule /* top */
